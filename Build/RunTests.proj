<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5" DefaultTargets="RunTests">
	<Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\TeamBuild\Microsoft.TeamFoundation.Build.targets" />
    <UsingTask AssemblyFile="MSBuildTasks\xunit.runner.msbuild.dll" TaskName="Xunit.Runner.MSBuild.xunit" />
	<UsingTask AssemblyFile="MSBuildTasks\Brion.MSBuildTasks.dll" TaskName="NUnitMergeOutput"/>

	<Target Name="RunTests">
		
		<BuildStep TeamFoundationServerUrl="$(TeamFoundationServerUrl)" BuildUri="$(BuildUri)" Name="XUnitTestStep" Message="Running Xunit Tests">
			<Output TaskParameter="Id" PropertyName="XUnitStepId" />
		</BuildStep>

		<ItemGroup>
			<TestAssemblies Include="$(OutDir)\*.UnitTest.dll" />
		</ItemGroup>
		
		<xunit ContinueOnError="true" Assembly="%(TestAssemblies.FullPath)" NUnitXml="$(OutDir)%(TestAssemblies.Filename).xml">
			<Output TaskParameter="ExitCode" ItemName="XUnitResult" />
		</xunit>

		<BuildStep TeamFoundationServerUrl="$(TeamFoundationServerUrl)" BuildUri="$(BuildUri)" Name="MsTestStep" Message="Publishing test results">
			<Output TaskParameter="Id" PropertyName="MsTestStepId" />
		</BuildStep>

		<ItemGroup>
			<TestXmlFiles Include="$(OutDir)%(TestAssemblies.Filename).xml" />
		</ItemGroup>

		<NUnitMergeOutput NUnitOutputXmlFiles="@(TestXmlFiles)" PathOfMergedXmlFile="$(OutDir)NUnitTestResults.xml" />

		<Exec Command="&quot;MSBuildTasks\nxslt2.exe&quot; &quot;$(OutDir)NUnitTestResults.xml&quot; &quot;MSBuildTasks\nunit transform.xslt&quot; -o &quot;$(OutDir)MsTestResults.trx&quot;"/>
		<Exec Command="&quot;$(ProgramFiles)\Microsoft Visual Studio 9.0\Common7\IDE\mstest.exe&quot; /publish:$(TeamFoundationServerUrl) /publishbuild:&quot;$(BuildNumber)&quot; /publishresultsfile:&quot;$(OutDir)MsTestResults.trx&quot; /teamproject:&quot;$(TeamProject)&quot; /platform:&quot;Any CPU&quot; /flavor:&quot;Release&quot;">
			<Output TaskParameter="ExitCode" PropertyName="MsTestResult" />
		</Exec>

		<BuildStep Condition="'$(MsTestResult)'=='0'" TeamFoundationServerUrl="$(TeamFoundationServerUrl)" BuildUri="$(BuildUri)" Id="$(MsTestStepId)" Status="Succeeded" />
		<BuildStep Condition="'$(MsTestResult)'!='0'" TeamFoundationServerUrl="$(TeamFoundationServerUrl)" BuildUri="$(BuildUri)" Id="$(MsTestStepId)" Status="Failed" />

		<Error Condition="%(XUnitResult.Filename) != 0" Text="Tests Failed" />
		<BuildStep TeamFoundationServerUrl="$(TeamFoundationServerUrl)" BuildUri="$(BuildUri)" Id="$(XUnitStepId)" Status="Succeeded" />
		
		<OnError ExecuteTargets="MarkBuildStepAsFailed" />
	</Target>

	<Target Name="MarkBuildStepAsFailed">
		<BuildStep
            TeamFoundationServerUrl="$(TeamFoundationServerUrl)"
            BuildUri="$(BuildUri)"
            Id="$(XUnitStepId)"
            Status="Failed" />
	</Target>
</Project>