<?xml version="1.0" encoding="utf-8"?>
<topic id="45f9dbed-12d3-483e-a244-8dfc5f7c3ba8" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
		<para>
      		This topic shows how to use <token>TelerikMvc</token> in an <token>Mvc</token>
      		application.
		</para>
    </introduction>
    <prerequisites>
    	<content>
    		Before proceeding with <token>TelerikMvc</token> make sure you have all the 
    		<link xlink:href="3e4595a7-3c2f-429d-8cdd-a3c638417369">required components</link> installed.
    	</content>
    </prerequisites>
    <!-- One or more procedure or section with procedure -->
    <procedure>
      <title>Using <token>TelerikMvc</token> in an <token>Mvc</token> web application</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
            	Open an existing <token>Mvc</token> application in Visual Studio or create a new one.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>Add a reference to <token>TelerikMvcDll</token> which is located in the <localUri>Binaries</localUri> folder of 
            <token>TelerikMvc</token> install location:</para>
			<list class="bullet">
			  <listItem>Right click the "References" item in Solution Explorer.
			  <mediaLink><image xlink:href="AddReference"/></mediaLink>
			  </listItem>
			  <listItem>Choose the <ui>Browse</ui> tab in the "Add Reference" dialog and browse to
			  the location where you extracted the <token>TelerikMvc</token> zip file. In case you have chosen
			  the suggested location this would be <token>InstallationLocation</token>. Open the <localUri>Binaries</localUri>
			  folder.
			  </listItem>
			  <listItem>Select <localUri>Telerik.Web.Mvc.dll</localUri> and click the <ui>OK</ui> button.
			  <mediaLink><image xlink:href="PickReference"/></mediaLink>
			  </listItem>
			</list>
          </content>
        </step>
        <step>
        	<content>
 				<para>Register the <token>TelerikMvc</token> namespaces:</para>
				<list class="bullet">
					<listItem>
						Open the <localUri>web.config</localUri> file of your <token>Mvc</token> application.
					</listItem>
					<listItem>
						Locate the <codeInline>&lt;namespaces&gt;</codeInline> tag which is within the <codeInline>&lt;pages&gt;</codeInline> tag.
					</listItem>
					<listItem>
						Add the following line at the end of the <codeInline lang="xml">&lt;namespaces&gt;</codeInline> tag:
						<code lang="xml">
						<![CDATA[
						<add namespace="Telerik.Web.Mvc.UI" />
						]]>
						</code>
						Here is the how the <codeInline>&lt;namespaces&gt;</codeInline> tag should look like:
						<code lang="xml">
						<![CDATA[
						<namespaces>
							<add namespace="System.Web.Mvc" />
							<add namespace="System.Web.Mvc.Ajax" />
							<add namespace="System.Web.Mvc.Html" />
							<add namespace="System.Web.Routing" />
							<add namespace="System.Linq" />
							<add namespace="System.Collections.Generic" />
			
			                <add namespace="Telerik.Web.Mvc.UI" />
			            </namespaces>							
						]]>
						</code>
					</listItem>
				</list>
        	</content>
        </step>
        <step>
        	<content>
        		<para>Add the JavaScript files in the <localUri>Scripts</localUri> folder of your
        			<token>Mvc</token> application.
        		</para>
        		<para>
        			The JavaScript files are located in a folder named after 
        			the version of the <token>TelerikMvcDll</token> assembly within the <localUri>Scripts</localUri> folder
        			of your <token>TelerikMvc</token> install location. 
        		</para>
        		<list class="bullet">
        			<listItem>
        				Browse to the <localUri>Scripts</localUri> folder of your <token>TelerikMvc</token>
        				install location. In case you have chosen
			  			the suggested location this would be <token>InstallationLocation</token><localUri>\Scripts</localUri>.
        			</listItem>
        			<listItem>
        				Copy the subfolder within the <localUri>Scripts</localUri> folder.
        			</listItem>
        			<listItem>
        				In Visual Studio Solution Explorer expand the <localUri>Scripts</localUri> folder and
        				paste the folder which you copied during the previous step.
        				<mediaLink><image xlink:href="TelerikUIScript"/></mediaLink>
        			</listItem>
        		</list>
        		<alert class="note">
        		<para>
        			The <codeInline>ScriptRegistrar</codeInline> component looks for JavaScript files in the following order:
        		</para>
        		<list class="bullet">
        			<listItem>
        				<para>
	        				First it will search for a folder with the same name as the version of the <token>TelerikMvcDll</token> assembly located 
	        				in the <localUri>Scripts</localUri> folder of your	<token>Mvc</token> application.
        				</para>
        				<para>
        					If such a folder is found the <codeInlinde>ScriptRegistrar</codeInlinde> will look for the following extensions:
        					<list class="ordered">
        						<listItem>
        							*.debug.js
			        			</listItem>
			        			<listItem>
			        				*.min.js
			        			</listItem>
			        			<listItem>
			        				*.js
			        			</listItem>
        					</list>
        				</para>
        			</listItem>
        			<listItem>
	        				If there is no such folder, the <codeInline>ScriptRegistrar</codeInline> will search in the <localUri>Scripts</localUri> folder 
	        				of the <token>Mvc</token> application. It is better to copy the folder with the version for easier upgrade.
        			</listItem>
        		</list>
        		</alert>
        	</content>
        </step>
        <step address="TelerikUIDefaultCSS">
        	<content>
        		<para>Add the CSS files in the <localUri>Content</localUri> folder of your <token>Mvc</token> application.
        		</para>
        		<para>
        			The CSS files are located in a folder named after
        			the version of the <token>TelerikMvcDll</token> assembly within the <localUri>Content</localUri> folder
        			of your <token>TelerikMvc</token> install location. 
        		</para>
        		<list class="bullet">
        			<listItem>
        				Browse to the location where you extracted the <token>TelerikMvc</token> zip file. In case you have chosen
			  			the suggested location this would be <token>InstallationLocation</token>. Open <localUri>Content</localUri> folder and copy the subfolder within it.
        				
        			</listItem>
        			<listItem>
        				In Visual Studio Solution Explorer expand the <localUri>Content</localUri> folder and
        				paste the folder which you copied during the previous step.
        				<mediaLink><image xlink:href="TelerikUICss"/></mediaLink>
        			</listItem>
        			<listItem>
        				Now to use these skins in your project, you will need to use the <codeInline>StyleSheetRegistrar</codeInline> component.
        				Here is a code snippet showing how to register the "Vista" theme.
						<code language="C#">
							<![CDATA[
								<% 
								    Html.Telerik().StyleSheetRegistrar()
			                            .DefaultGroup(group => group.Add("telerik.common.css")
			                                                        .Add("telerik.vista.css"))
			                            .Render(); 
			                    %>
							]]>
						</code>
						<para>
							This code should be copied within the <codeInline>&lt;head&gt;</codeInline> tag of your application. In most cases
							this is in the <localUri>Site.master</localUri> file.
						</para>
						<para>
							Explanation of the code:
						</para>
						<list class="bullet">
							<listItem>
								The <codeEntityReference autoUpgrade="true">M:Telerik.Web.Mvc.UI.StyleSheetRegistrarBuilder.DefaultGroup(System.Action{Telerik.Web.Mvc.UI.WebAssetItemGroupBuilder})</codeEntityReference> method returns
								the default asset group.
							</listItem>
							<listItem>
								The <codeEntityReference autoUpgrade="true">M:Telerik.Web.Mvc.UI.WebAssetItemCollectionBuilder.Add(System.String)</codeEntityReference>
								method adds the specified CSS file to the asset group. 
								<alert class="important">
									You should always include the <localUri>telerik.common.css</localUri> file as well as the theme. The 
									<localUri>telerik.common.css</localUri> file contains common CSS rules used by all themes.
								</alert>
							</listItem>
						</list>
        			</listItem>
        		</list>
        	</content>
        </step>
        <step address="ComponentDefinition">
        	<content>
        		<para>Now you can start using <token>TelerikMvc</token>! Let's try the <newTerm>PanelBar</newTerm>
        		component.
        		</para>
        		<list class="bullet">
        			<listItem>
        				Open the master page of your <token>Mvc</token> application. If using the defaults the master page is <localUri>Views\Shared\Site.master</localUri>.
        				<alert class="note">
        					The <token>TelerikMvc</token> can be used in master pages, view pages or partial views. Picking
        					the default master page was for the example's purpose.
        				</alert>
        			</listItem>
        			<listItem>
        				Let's add an PanelBar component with two header items and some content. You can paste the following in the
        				<codeInline>&lt;div id="menucontainer"&gt;</codeInline> tag:
        				<code lang="C#">
							<![CDATA[
								<% Html.Telerik().PanelBar()
								       .Name("PanelBar")
								       .Items(items =>
								       {
								           items.Add().Text("Item 1")
								                      .Content(() =>
								                      {%>
								                            <p>Content</p>
								                       <% });
								           items.Add().Text("Item 2")
								                .Items(subItems => 
								                      {
								                          subItems.Add().Text("Sub Item 1");
								                          subItems.Add().Text("Sub Item 2");
								                          subItems.Add().Text("Sub Item 3");
								                      });
								       })
								       .Render();
								%>
								
								<% Html.Telerik().ScriptRegistrar().Render(); %>
					        ]]>
						</code>
        			</listItem>
        			<listItem>
        				That's all! Build your application and run it. The output should look like this:
        				<mediaLink><image xlink:href="TelerikPanelBarInMvcApp"/></mediaLink>
        			</listItem>
        		</list>
        	</content>
        </step>
      </steps>
           <conclusion>These are the basics required to start using <token>TelerikMvc</token>. Please check the other
      			topics in this manual for additional info.</conclusion>
    </procedure>
    
    <relatedTopics>
    	<link xlink:href="3e4595a7-3c2f-429d-8cdd-a3c638417369" />
    	<link xlink:href="cb7aba78-ad8a-4e00-b83f-0772daba75fe" />
    	<link xlink:href="7fc6d783-ce22-443d-9999-20fe4299e2b3" />
    </relatedTopics>
    
  </developerWalkthroughDocument>
</topic>