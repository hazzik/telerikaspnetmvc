//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4013
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// (c) Copyright Telerik Corp. 
// This source is subject to the Microsoft Public License. 
// See http://www.microsoft.com/opensource/licenses.mspx#Ms-PL. 
// All other rights reserved.

namespace Mvc.UI.jQuery.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TextResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture = global::Telerik.Web.Mvc.Infrastructure.Culture.Current;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mvc.UI.jQuery.Resources.TextResource", typeof(TextResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set animation duration when close animation opacity is already set..
        /// </summary>
        internal static string CannotSetAnimationDurationWhenCloseAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetAnimationDurationWhenCloseAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set animation duration when open animation opacity is already set..
        /// </summary>
        internal static string CannotSetAnimationDurationWhenOpenAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetAnimationDurationWhenOpenAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set animation opacity when close animation opacity is already set..
        /// </summary>
        internal static string CannotSetAnimationOpacityWhenCloseAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetAnimationOpacityWhenCloseAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set animation opacity when open animation opacity is already set..
        /// </summary>
        internal static string CannotSetAnimationOpacityWhenOpenAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetAnimationOpacityWhenOpenAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set close animation duration when animation opacity is already set..
        /// </summary>
        internal static string CannotSetCloseAnimationDurationWhenAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetCloseAnimationDurationWhenAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set close animation opacity when animation opacity is already set..
        /// </summary>
        internal static string CannotSetCloseAnimationOpacityWhenAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetCloseAnimationOpacityWhenAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set open animation duration when animation opacity is already set..
        /// </summary>
        internal static string CannotSetOpenAnimationDurationWhenAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetOpenAnimationDurationWhenAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set open animation opacity when animation opacity is already set..
        /// </summary>
        internal static string CannotSetOpenAnimationOpacityWhenAnimationOpacityIsAlreadySet {
            get {
                return ResourceManager.GetString("CannotSetOpenAnimationOpacityWhenAnimationOpacityIsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selectors should be paired when range is set to true..
        /// </summary>
        internal static string TheSelectorsShouldBePairedWhenRangeIsSetToTrue {
            get {
                return ResourceManager.GetString("TheSelectorsShouldBePairedWhenRangeIsSetToTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value is not supported when range is set to true..
        /// </summary>
        internal static string ValueIsNotSupportedWhenRangeIsSetToTrue {
            get {
                return ResourceManager.GetString("ValueIsNotSupportedWhenRangeIsSetToTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value should be between 0-100..
        /// </summary>
        internal static string ValueShouldBeBetweenZeroToHundred {
            get {
                return ResourceManager.GetString("ValueShouldBeBetweenZeroToHundred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values is only supported when range is set to true..
        /// </summary>
        internal static string ValuesIsOnlySupportedWhenRangeIsSetToTrue {
            get {
                return ResourceManager.GetString("ValuesIsOnlySupportedWhenRangeIsSetToTrue", resourceCulture);
            }
        }
    }
}
