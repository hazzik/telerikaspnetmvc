//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4013
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// (c) Copyright Telerik Corp. 
// This source is subject to the Microsoft Public License. 
// See http://www.microsoft.com/opensource/licenses.mspx#Ms-PL. 
// All other rights reserved.

namespace Telerik.Web.Mvc.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TextResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Telerik.Web.Mvc.Resources.TextResource", typeof(TextResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; array cannot be empty..
        /// </summary>
        internal static string ArrayCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArrayCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; cannot be negative..
        /// </summary>
        internal static string CannotBeNegative {
            get {
                return ResourceManager.GetString("CannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; cannot be negative or zero..
        /// </summary>
        internal static string CannotBeNegativeOrZero {
            get {
                return ResourceManager.GetString("CannotBeNegativeOrZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; cannot be null..
        /// </summary>
        internal static string CannotBeNull {
            get {
                return ResourceManager.GetString("CannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; cannot be null or empty..
        /// </summary>
        internal static string CannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("CannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; collection cannot be empty..
        /// </summary>
        internal static string CollectionCannotBeEmpty {
            get {
                return ResourceManager.GetString("CollectionCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group with specified name already exists..
        /// </summary>
        internal static string GroupWithSpecifiedNameAlreadyExists {
            get {
                return ResourceManager.GetString("GroupWithSpecifiedNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group with specified name &quot;{0}&quot; already exists. Please specify a different name..
        /// </summary>
        internal static string GroupWithSpecifiedNameAlreadyExistsPleaseSpecifyADifferentName {
            get {
                return ResourceManager.GetString("GroupWithSpecifiedNameAlreadyExistsPleaseSpecifyADifferentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group with specified name &quot;{0}&quot; does not exist. Please make sure you have specified a correct name..
        /// </summary>
        internal static string GroupWithSpecifiedNameDoesNotExistPleaseMakeSureYouHaveSpecifiedACorrectName {
            get {
                return ResourceManager.GetString("GroupWithSpecifiedNameDoesNotExistPleaseMakeSureYouHaveSpecifiedACorrectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item with specified source already exists..
        /// </summary>
        internal static string ItemWithSpecifiedSourceAlreadyExists {
            get {
                return ResourceManager.GetString("ItemWithSpecifiedSourceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be blank..
        /// </summary>
        internal static string NameCannotBeBlank {
            get {
                return ResourceManager.GetString("NameCannotBeBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one ScriptRegistrar is allowed in a single request..
        /// </summary>
        internal static string OnlyOneScriptRegistrarIsAllowedInASingleRequest {
            get {
                return ResourceManager.GetString("OnlyOneScriptRegistrarIsAllowedInASingleRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one StyleSheetRegistrar is allowed in a single request..
        /// </summary>
        internal static string OnlyOneStyleSheetRegistrarIsAllowedInASingleRequest {
            get {
                return ResourceManager.GetString("OnlyOneStyleSheetRegistrarIsAllowedInASingleRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source must be a virtual path which should starts with &quot;~/&quot;.
        /// </summary>
        internal static string SourceMustBeAVirtualPathWhichShouldStartsWithTileAndSlash {
            get {
                return ResourceManager.GetString("SourceMustBeAVirtualPathWhichShouldStartsWithTileAndSlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified file does not exist: &quot;{0}&quot;..
        /// </summary>
        internal static string SpecifiedFileDoesNotExist {
            get {
                return ResourceManager.GetString("SpecifiedFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot call render more than once..
        /// </summary>
        internal static string YouCannotCallRenderMoreThanOnce {
            get {
                return ResourceManager.GetString("YouCannotCallRenderMoreThanOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot call Start more than once..
        /// </summary>
        internal static string YouCannotCallStartMoreThanOnce {
            get {
                return ResourceManager.GetString("YouCannotCallStartMoreThanOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must have to call Start prior calling this method..
        /// </summary>
        internal static string YouMustHaveToCallStartPriorCallingThisMethod {
            get {
                return ResourceManager.GetString("YouMustHaveToCallStartPriorCallingThisMethod", resourceCulture);
            }
        }
    }
}
